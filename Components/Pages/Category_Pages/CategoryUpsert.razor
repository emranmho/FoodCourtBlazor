@page "/category/create"
@page "/category/update/id={id:guid}"
@inject ICategoryService CategoryService;
@inject NavigationManager NavigationManager;
@inject IJSRuntime JsRuntime;
@if (IsLoading)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column bg-white justify-content-center align-items-center">
        <img src="Images/loading.gif" alt="loading"/>
    </div>
}
else
{
    <div class="card card-body border-0 mt-4">
        <div class="card-header bg-black bg-gradient ml-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">@(Id == Guid.Empty ? "Create" : "Update") Category </h2>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
            <EditForm Model="Category" FormName="CategoryUpsertForm" OnValidSubmit="UpsertCategory">
                <DataAnnotationsValidator/>
                
                <div class="border p-3 mt-4">
                    <div class="form-floating py-3 cpl-12">
                        <InputText @bind-Value="Category.Name" class="form-control" id="Name" placeholder="Name"/>
                        <label for="Name">Name</label>
                        <ValidationMessage For="@(() => Category.Name)"/>
                    </div>
                    <div class="row mt-3">
                        <div class="col-6 col-md-3">
                            <button type="submit" class="btn btn-primary form-control" disabled="@IsLoading">
                                <i class="bi bi-save"></i> @(Id == Guid.Empty ? "Create" : "Update")
                            </button>
                        </div>
                        <div class="col-6 col-md-3">
                            <a href="category" class="btn btn-secondary form-control" disabled="@IsLoading">
                                <i class="bi bi-arrow-bar-left"></i> Back to List
                            </a>
                        </div>
                    </div>
                </div>
            </EditForm>
            <div class="mt-4">
                
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public Guid Id { get; set; }
    
    private bool IsLoading { get; set; } = true;
    
    [SupplyParameterFromForm]
    private Category Category { get; set; } = new Category();
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id != Guid.Empty)
            {
                await LoadCategory(Id);
            }
            IsLoading = false;
            StateHasChanged();
        }
    }

    private async Task LoadCategory(Guid id)
    {
        Category = await CategoryService.GetCategory(id);
    }
    
    private async Task UpsertCategory()
    {
        IsLoading = true;
        if (Id != Guid.Empty)
        {
            await CategoryService.UpdateCategory(Category);
            await JsRuntime.ShowNotification("success", "Category updated successfully");
        }
        else
        {
            await CategoryService.CreateCategory(Category);
            await JsRuntime.ShowNotification("success", "Category created successfully");
        }
        IsLoading = false;
        NavigationManager.NavigateTo("category");
    }

}