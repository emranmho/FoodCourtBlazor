<!-- Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">@Title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-end">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"
                        @onclick="() => OnModalButtonClick(false)">Close</button>
                <button type="button" class="btn @ButtonClass"
                        @onclick="() => OnModalButtonClick(true)">@ButtonText</button>
            </div>
            
        </div>
    </div>
</div>
@code {
    [Parameter]
    public EventCallback<bool> OnModalConfirmation { get; set; }

    [Parameter] public string Title { get; set; } = "Please Confirm";
    [Parameter] public string ButtonText { get; set; } = "Confirm";
    [Parameter] public string ButtonClass { get; set; } = "btn-primary";
    
    private void OnModalButtonClick(bool isConfirmed)
    {
        if (isConfirmed)
        {
            OnModalConfirmation.InvokeAsync(isConfirmed);
        }
    }
}